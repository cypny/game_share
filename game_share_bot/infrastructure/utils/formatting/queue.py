from datetime import timedelta, timezone

from game_share_bot.infrastructure.models import Rental
from game_share_bot.infrastructure.repositories.rental.queue_entry import QueueFullInfo


def format_my_queue(queues_info: list[QueueFullInfo], rentals_to_take: list[Rental]) -> str:
    text_lines = []

    # –ë–ª–æ–∫ –∞—Ä–µ–Ω–¥, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—É—á–µ–Ω–∏–µ
    if rentals_to_take:
        text_lines.append("üéØ <b>–ê—Ä–µ–Ω–¥—ã, –≥–æ—Ç–æ–≤—ã–µ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é:</b>")
        for rental in rentals_to_take:
            rental_line = (
                f"üéÆ <b>{rental.disc.game.title}</b>\n"
                #TODO: –≤—ã–Ω–µ—Å—Ç–∏ —ç—Ç–æ
                f"‚è∞ –í–∑—è—Ç—å –¥–æ: {(rental.created_at + timedelta(weeks=1)).strftime('%d.%m.%Y %H:%M')}\n"
            )
            text_lines.append(rental_line)
        text_lines.append("")

    # –ë–ª–æ–∫ –æ—á–µ—Ä–µ–¥–µ–π
    if queues_info:
        text_lines.append("üìã <b>–ú–æ–∏ –æ—á–µ—Ä–µ–¥–∏:</b>")
        for info in queues_info:
            queue_line = (
                f"üéÆ <b>{info.game.title}</b>\n"
                f"üìÖ –í –æ—á–µ—Ä–µ–¥–∏ —Å {info.queue_entry.created_at.strftime('%d.%m.%Y %H:%M')}\n"
                f"üèÅ –ü–æ–∑–∏—Ü–∏—è: <b>{info.position}/{info.total_in_queue}</b>\n"
            )
            text_lines.append(queue_line)
    else:
        text_lines.append(
            "üì≠ <b>–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏</b>\n\n"
            "–î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä—ã –≤ –æ—á–µ—Ä–µ–¥—å, —á—Ç–æ–±—ã –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∏—Ö, –∫–æ–≥–¥–∞ –æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã."
        )

    return "\n".join(text_lines)
