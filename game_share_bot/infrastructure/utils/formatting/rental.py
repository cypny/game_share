from game_share_bot.domain.enums import RentalStatus
from game_share_bot.infrastructure.models import Rental


def format_rental_full(rental: Rental) -> str:
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –¥–∞—Ç—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ None
    if rental.start_date:
        start_date_text = f"üìÖ <b>–ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:</b> {rental.start_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        start_date_text = "üìÖ <b>–ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:</b> <i>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>"

    if rental.expected_end_date:
        expected_end_text = f"‚è∞ <b>–í–µ—Ä–Ω—É—Ç—å –¥–æ:</b> {rental.expected_end_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        expected_end_text = "‚è∞ <b>–í–µ—Ä–Ω—É—Ç—å –¥–æ:</b> <i>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>"

    if rental.actual_end_date:
        actual_end_text = f"‚úÖ <b>–§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—É–ª:</b> {rental.actual_end_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        actual_end_text = "‚úÖ <b>–§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—É–ª:</b> <i>–∞—Ä–µ–Ω–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞</i>"

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å—ë –≤ –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫
    lines = [
        f"üéÆ <b>–ò–≥—Ä–∞:</b> {rental.disc.game.title}",
        f"üÜî <b>–ù–æ–º–µ—Ä –∞—Ä–µ–Ω–¥—ã:</b> {rental.id}",
        f"üíø <b>ID –¥–∏—Å–∫–∞:</b> {rental.disc.disc_id}",
        "",  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        start_date_text,
        expected_end_text,
        actual_end_text,
        "",
        f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {RentalStatus(rental.status_id).name.replace('_', ' ').title()}"
    ]

    return "\n".join(lines)

def format_rental_short(rental: Rental) -> str:
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –¥–∞—Ç—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ None
    if rental.start_date:
        start_date_text = f"üìÖ <b>–ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:</b> {rental.start_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        start_date_text = "üìÖ <b>–ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:</b> <i>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>"

    if rental.expected_end_date:
        expected_end_text = f"‚è∞ <b>–í–µ—Ä–Ω—É—Ç—å –¥–æ:</b> {rental.expected_end_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        expected_end_text = "‚è∞ <b>–í–µ—Ä–Ω—É—Ç—å –¥–æ:</b> <i>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>"

    if rental.actual_end_date:
        actual_end_text = f"‚úÖ <b>–§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—É–ª:</b> {rental.actual_end_date.strftime('%d.%m.%Y –≤ %H:%M')}"
    else:
        actual_end_text = "‚úÖ <b>–§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—É–ª:</b> <i>–∞—Ä–µ–Ω–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞</i>"

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å—ë –≤ –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫
    lines = [
        f"üë§ @{rental.user.name}",
        f"üéÆ <b>–ò–≥—Ä–∞:</b> {rental.disc.game.title}",
        start_date_text,
        expected_end_text,
        ""
    ]

    return "\n".join(lines)

def format_pending_take_message(rentals: list[Rental]):
    if not rentals:
        return "–ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    returns_str = "\n\n".join(
        format_rental_short(rental) for rental in rentals
    )
    return f"üìã –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ ({len(rentals)}):\n\n{returns_str}"

